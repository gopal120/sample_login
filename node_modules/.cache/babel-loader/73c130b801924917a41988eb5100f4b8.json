{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satya\\\\Desktop\\\\project\\\\01-starting-setup\\\\src\\\\components\\\\custominput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  const [EnteredValue, SetEnteredvalue] = useState(\"\");\n  const [focus, setfocus] = useState(null);\n  const ValueIsValid = props.validate(EnteredValue);\n  const HasError = !ValueIsValid && focus;\n\n  const valueInputChangeHandler = e => {\n    SetEnteredvalue(e.target.value);\n    setfocus(true);\n  };\n\n  const blurHandler = () => {\n    setfocus(true);\n  };\n\n  const reset = () => {\n    SetEnteredvalue(\"\");\n    setfocus(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: EnteredValue,\n      type: props.type,\n      placeholder: props.placeholder,\n      onChange: valueInputChangeHandler,\n      onFocus: blurHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"9usF3Nvb+GsqwEtSG/4bPpVbbFE=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/satya/Desktop/project/01-starting-setup/src/components/custominput.js"],"names":["useState","Input","props","EnteredValue","SetEnteredvalue","focus","setfocus","ValueIsValid","validate","HasError","valueInputChangeHandler","e","target","value","blurHandler","reset","type","placeholder"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,YAAY,GAAGL,KAAK,CAACM,QAAN,CAAeL,YAAf,CAArB;AACA,QAAMM,QAAQ,GAAG,CAACF,YAAD,IAAiBF,KAAlC;;AACA,QAAMK,uBAAuB,GAAIC,CAAD,IAAO;AACrCP,IAAAA,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACAP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAHD;;AAIA,QAAMQ,WAAW,GAAG,MAAM;AACxBR,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAGA,QAAMS,KAAK,GAAG,MAAM;AAClBX,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE;AACE,MAAA,KAAK,EAAEH,YADT;AAEE,MAAA,IAAI,EAAED,KAAK,CAACc,IAFd;AAGE,MAAA,WAAW,EAAEd,KAAK,CAACe,WAHrB;AAIE,MAAA,QAAQ,EAAEP,uBAJZ;AAKE,MAAA,OAAO,EAAEI;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3BD;;GAAMb,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Input = (props) => {\r\n  const [EnteredValue, SetEnteredvalue] = useState(\"\");\r\n  const [focus, setfocus] = useState(null);\r\n  const ValueIsValid = props.validate(EnteredValue);\r\n  const HasError = !ValueIsValid && focus;\r\n  const valueInputChangeHandler = (e) => {\r\n    SetEnteredvalue(e.target.value);\r\n    setfocus(true);\r\n  };\r\n  const blurHandler = () => {\r\n    setfocus(true);\r\n  };\r\n  const reset = () => {\r\n    SetEnteredvalue(\"\");\r\n    setfocus(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <input\r\n        value={EnteredValue}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={valueInputChangeHandler}\r\n        onFocus={blurHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}